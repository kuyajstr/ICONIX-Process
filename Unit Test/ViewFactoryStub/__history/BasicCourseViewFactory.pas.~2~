unit BasicCourseViewFactory;

interface

uses
  ViewFactory,
  ViewIntf,
  Vcl.Forms,
  Classes;

type
  TSunnyDayViewFactory = class(TInterfacedObject, IViewFactory)
    function CreateMainView(AOwner: IInterface): IMainView;
    function CreateBookDetailView(AOwner: IInterface): IBookDetailsView;
    function CreateLoginView(AOwner: IInterface): ILoginView;
    function CreateWriteReviewView(AOwner: IInterface): IWriteReviewView;
  end;

implementation

uses
  MainViewStub,
  BookDetailsViewStub;

{ TViewFactoryStub }

function TSunnyDayViewFactory.CreateBookDetailView(
  AOwner: IInterface): IBookDetailsView;
begin
  Result := TBookDetailsViewStub.Create;
end;

function TSunnyDayViewFactory.CreateLoginView(AOwner: IInterface): ILoginView;
begin

end;

function TSunnyDayViewFactory.CreateMainView(AOwner: IInterface): IMainView;
begin
  Result := TMainViewStub.Create;
end;

function TSunnyDayViewFactory.CreateWriteReviewView(
  AOwner: IInterface): IWriteReviewView;
begin

end;

end.
