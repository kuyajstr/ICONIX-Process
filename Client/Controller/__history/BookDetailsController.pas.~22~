unit BookDetailsController;

interface

uses
  ControllerIntf,
  Vcl.Forms,
  Book,
  MVCFramework.RESTClient,
  BookDetailsForm;

type
  TBookDetailsController = class(TinterfacedObject, IController)
  private
    FBook: TBook;
    FView: TForm;
    RESTClient: IMVCRestClient;
    function GetView: TForm;
    procedure SetView(AView: TForm);
  public
    constructor Create(ABook: TBook);
    procedure Display;
    procedure WriteReview;

    property View: TForm read GetView write SetView;
  end;


implementation

uses
  WriteReviewController,
  AuthService;

{ TBookDetailsController }

constructor TBookDetailsController.Create(ABook: TBook);
begin
  inherited Create;
  RESTClient := TMVCRESTClient.New.BaseURL('localhost', 8080);
  RESTClient.SetBearerAuthorization(TAuthService.GetInstance.GetToken);
  FBook := ABook;
  FView := TBookDetailsFrm.Create(Self);
end;

procedure TBookDetailsController.Display;
begin
  var BookDetailsView := FView as TBookDetailsFrm;

  BookDetailsView.edtTitle.Text := FBook.Title;
  BookDetailsView.memSynopsis.Text := FBook.Synopsis;
  BookDetailsView.Show;
end;

function TBookDetailsController.GetView: TForm;
begin
  Result := FView;
end;

procedure TBookDetailsController.SetView(AView: TForm);
begin
  FView := AView;
end;

procedure TBookDetailsController.WriteReview;
begin
  var WriteReviewController := TWriteReviewController.Create;

  WriteReviewController.Display(FBook);
end;

end.
