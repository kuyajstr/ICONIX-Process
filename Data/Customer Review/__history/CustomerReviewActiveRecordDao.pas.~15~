unit CustomerReviewActiveRecordDao;

interface

uses
  DAOIntf,
  CustomerReview,
  CustomerActiveRecord,
  BookActiveRecord,
  CustomerReviewActiveRecord,
  MVCFramework.ActiveRecord,
  CustomerReviewContextIntf,
  Generics.Collections;

type
  TCustomerReviewActiveRecordDao = class(TInterfacedObject,
    IDAO<TCustomerReview>)
  private
    function ARtoCustomerReview(List: TObjectList<TMVCActiveRecord>)
      : TObjectList<TCustomerReview>;
    procedure InsertValidation(CustomerReview: TCustomerReview);
  public
    procedure Insert(var Obj: TCustomerReview);
    procedure Select(const AId: Integer; var Obj: TCustomerReview);
    procedure Update(var Obj: TCustomerReview);
    procedure Delete(const AId: Integer);
    procedure SelectAll(var AList: TObjectList<TCustomerReview>);
  end;

implementation

uses
  SysUtils;

{ TCustomerReviewActiveRecordDao }

function TCustomerReviewActiveRecordDao.ARtoCustomerReview
  (List: TObjectList<TMVCActiveRecord>): TObjectList<TCustomerReview>;
var
  CustomerReviewAR: TCustomerReviewActiveRecord;
begin
  Result := TObjectList<TCustomerReview>.Create;

  for var AR in List do
  begin
    CustomerReviewAR := AR as TCustomerReviewActiveRecord;
    Result.Add(TCustomerReview.Create(CustomerReviewAR));
  end;
end;

procedure TCustomerReviewActiveRecordDao.Delete(const AId: Integer);
begin
  var CustomerReviewAR := TCustomerReviewActiveRecord.Create;
  try
    CustomerReviewAR.Id := AId;
    CustomerReviewAR.Delete(True);
  finally
    CustomerReviewAR.Free;
  end;
end;

procedure TCustomerReviewActiveRecordDao.Insert(var Obj: TCustomerReview);
begin
  var CustomerReviewAR := TCustomerReviewActiveRecord.Create(Obj);
  try
    InsertValidation(Obj);
    CustomerReviewAR.Insert;
    Obj := TCustomerReview.Create(CustomerReviewAR);
  finally
    CustomerReviewAR.Free;
  end;
end;

procedure TCustomerReviewActiveRecordDao.InsertValidation
  (CustomerReview: TCustomerReview);
begin
  TMVCActiveRecord.GetByPK(TCustomerActiveRecord,
    CustomerReview.CustomerId, True);
  TMVCActiveRecord.GetByPK(TBookActiveRecord, 
    CustomerReview.CustomerId, True);
  CustomerReview.CheckRating;
  CustomerReview.CheckReview;
end;

procedure TCustomerReviewActiveRecordDao.Select(const AId: Integer;
  var Obj: TCustomerReview);
begin
  var
  CustomerReviewAR := TCustomerReviewActiveRecord.Create;
  try
    CustomerReviewAR.LoadByPK(AId);
    Obj := TCustomerReview.Create(CustomerReviewAR);
  finally
    CustomerReviewAR.Free;
  end;

end;

procedure TCustomerReviewActiveRecordDao.SelectAll
  (var AList: TObjectList<TCustomerReview>);
begin
  var
  CustomerReviewsAR := TMVCActiveRecord.All(TCustomerReviewActiveRecord);
  try
    AList := ARtoCustomerReview(CustomerReviewsAR);
  finally
    CustomerReviewsAR.Free;
  end;
end;

procedure TCustomerReviewActiveRecordDao.Update(var Obj: TCustomerReview);
begin
  var
  CustomerReviewAR := TCustomerReviewActiveRecord.Create(Obj);
  try
    CustomerReviewAR.Update;
    Obj := TCustomerReview.Create(CustomerReviewAR);
  finally
    CustomerReviewAR.Free;
  end;
end;

end.
