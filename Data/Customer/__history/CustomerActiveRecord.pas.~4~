unit CustomerActiveRecord;

interface

uses
  MVCFramework.ActiveRecord,
  MVCFramework.Serializer.Commons,
  MVCFramework.SQLGenerators.MySQL;

type

  [MVCNameCase(ncPascalCase)]
  [MVCTable('customer')]
  TCustomerActiveRecord = class(TMVCActiveRecord)
  private
    [MVCTableField('ID', [foPrimaryKey, foAutoGenerated])]
    FId: Integer;
    [MVCTableField('FIRST_NAME')]
    FFirstName: string;
    [MVCTableField('LAST_NAME')]
    FLastName: string;
    [MVCTableField('EMAIL')]
    FEmail: string;

    function GetId: Integer;
    procedure SetId(const Value: Integer);
    function GetFirstName: string;
    procedure SetFirstName(const AFirstName: string);
  public

    property Id: Integer read GetId write SetId;
    property FirstName: string read GetFirstName write SetFirstName;
  end;

implementation

{ TCustomerActiveRecord }

function TCustomerActiveRecord.GetFirstName: string;
begin
  Result := FFirstName;
end;

function TCustomerActiveRecord.GetId: Integer;
begin
  Result := FId;
end;

procedure TCustomerActiveRecord.SetFirstName(const AFirstName: string);
begin
  FFirstName := AFirstName;
end;

procedure TCustomerActiveRecord.SetId(const Value: Integer);
begin
  FId := Value;
end;

end.
