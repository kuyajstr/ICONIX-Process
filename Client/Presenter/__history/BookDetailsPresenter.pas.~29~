unit BookDetailsPresenter;

interface

uses
  PresenterIntf,
  ViewIntf,
  Book,
  BookDetailsView,
  BookDetailsRestService;

type
  TBookDetailsPresenter = class(TinterfacedObject, IBookDetailsPresenter)
  private
    FBook: TBook;
    FView: IBookDetailsView;
//    FRestClient: IMVCRestClient;
    FRestService: IBookDetailsRestService;
  public
    constructor Create(AView: IBookDetailsView; ABook: TBook;
      ARestService: IBookDetailsRestService);
    procedure ComposeReview;
    procedure DisplayView;
    function IsUserAuthorized: Boolean;
  end;

implementation

uses
  WriteReviewPresenter,
  WriteReviewView,
  AuthService,
  SysUtils,
  LoginPresenter,
  LoginView,
  Vcl.Forms,
  Vcl.Dialogs,
  Vcl.Controls,
  LoginRestService;

{ TBookDetailsController }

procedure TBookDetailsPresenter.ComposeReview;
begin
  if not IsUserAuthorized then
    Exit;

  var WriteReviewView := TWriteReviewForm.Create(FView as TForm);
  var WriteReviewPresenter := TWriteReviewPresenter.Create(WriteReviewView, FBook);
  WriteReviewPresenter.DisplayView;
end;

constructor TBookDetailsPresenter.Create(AView: IBookDetailsView; ABook: TBook;
  ARestService: IBookDetailsRestService);
begin
  inherited Create;
  FRestService := ARestService;
//  FRestClient := TMVCRESTClient.New.BaseURL('localhost', 8080);
//  FRestClient.SetBearerAuthorization(TAuthService.GetInstance.GetToken);
  FBook := ABook;
  FView := AView;
  FView.SetPresenter(Self);
end;

procedure TBookDetailsPresenter.DisplayView;
begin
  FView.SetTitle(FBook.Title);
  FView.SetSynopsis(FBook.Synopsis);
  FView.Show;
end;

function TBookDetailsPresenter.IsUserAuthorized: Boolean;
begin
//  FRestClient.SetBearerAuthorization(TAuthService.GetInstance.GetToken);
  FRestService.RefreshToken;
  Result := True;
//  var CheckUserRequest := FRestClient.Post('/api/customer_reviews', '{}');
//  // Check if ReasonString is Unauthorized
//  if CheckUserRequest.StatusCode = 403 then
  var IsUserAuthorized := FRestService.IsUserAuthorize;
  if IsUserAuthorized then
  begin
    Result := False;
    if MessageDlg('Please Login first, would you like to proceed?',
      mtConfirmation, [mbYes, mbNo], 0) = mrYes then
    begin
      var LoginView := TLoginForm.Create(FView as TForm);
      var LoginPresenter := TLoginPresenter.Create(LoginView);
      LoginView.Show;
    end;
  end;
end;

end.
