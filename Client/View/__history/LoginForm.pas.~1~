unit LoginForm;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, BaseForm, Vcl.StdCtrls, Vcl.Buttons;

type
  TfrmLogin = class(TfrmBase)
    edtEmail: TEdit;
    edtPassword: TEdit;
    lblPassword: TLabel;
    lblUser: TLabel;
    btnLogin: TButton;
    procedure btnLoginClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    SucessfulLogin : boolean;
  public
    { Public declarations }
  end;

var
  frmLogin: TfrmLogin;

implementation

{$R *.dfm}
uses
  MVCFramework.RESTClient,
  JsonDataObjects,
  ClientSecurityService,
  System.UITypes,
  MainPageForm;



procedure TfrmLogin.btnLoginClick(Sender: TObject);
var
  lUsername, lPassword: string;
  Resp : TMVCRESTResponse;
  Response : TJsonObject;
  Token : String;
  TokenVar : string;

begin
  lUsername := edtEmail.Text;
  lPassword := edtPassword.Text;

  SetAuthorization(lUsername,lPassword);

  Resp := RESTClient.Get('/api/login') as TMVCRESTResponse;

  SucessfulLogin := Resp.Success;

  if SucessfulLogin then
  begin
    Token := Resp.ToJSONObject.Values['token'];

    SecurityService := TSecurityService.Create;
    SecurityService.SetToken(Token);

    TokenVar := SecurityService.TokenFromStream;

    Close;
  end
  else
  begin
    edtPassword.Clear;
    ShowMessage('Incorrect login credentials!');
  end;

end;

procedure TfrmLogin.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
  if not SucessfulLogin then
    frmLibrary.Close;
end;

end.
